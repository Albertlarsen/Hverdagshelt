// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test for NotificationSettings view renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NotificationSettings />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "bsClass": "container",
      "children": <Uncontrolled(Tabs)
        defaultActiveKey={1}
        id="uncontrolled-tab-example"
      >
        <Tab
          eventKey={1}
          title="Mine kommuner"
        >
          <NotificationSettingsMyCountiesForm />
        </Tab>
        <Tab
          eventKey={2}
          title="Mine saker"
        >
          <MyIssuesNotificationSettingsForm />
        </Tab>
      </Uncontrolled(Tabs)>,
      "className": "notifications bottomFooter",
      "componentClass": "div",
      "fluid": false,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Tab
            eventKey={1}
            title="Mine kommuner"
          >
            <NotificationSettingsMyCountiesForm />
          </Tab>,
          <Tab
            eventKey={2}
            title="Mine saker"
          >
            <MyIssuesNotificationSettingsForm />
          </Tab>,
        ],
        "defaultActiveKey": 1,
        "id": "uncontrolled-tab-example",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <NotificationSettingsMyCountiesForm />,
            "eventKey": 1,
            "title": "Mine kommuner",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <MyIssuesNotificationSettingsForm />,
            "eventKey": 2,
            "title": "Mine saker",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "bsClass": "container",
        "children": <Uncontrolled(Tabs)
          defaultActiveKey={1}
          id="uncontrolled-tab-example"
        >
          <Tab
            eventKey={1}
            title="Mine kommuner"
          >
            <NotificationSettingsMyCountiesForm />
          </Tab>
          <Tab
            eventKey={2}
            title="Mine saker"
          >
            <MyIssuesNotificationSettingsForm />
          </Tab>
        </Uncontrolled(Tabs)>,
        "className": "notifications bottomFooter",
        "componentClass": "div",
        "fluid": false,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Tab
              eventKey={1}
              title="Mine kommuner"
            >
              <NotificationSettingsMyCountiesForm />
            </Tab>,
            <Tab
              eventKey={2}
              title="Mine saker"
            >
              <MyIssuesNotificationSettingsForm />
            </Tab>,
          ],
          "defaultActiveKey": 1,
          "id": "uncontrolled-tab-example",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <NotificationSettingsMyCountiesForm />,
              "eventKey": 1,
              "title": "Mine kommuner",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <MyIssuesNotificationSettingsForm />,
              "eventKey": 2,
              "title": "Mine saker",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
