// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test for ForgottenPassword view renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ForgottenPassword />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h2>
          Glemt passord
        </h2>,
        <p>
          Skriv inn eposten din og få tilsendt et nytt passord på mail.
        </p>,
        <Form
          bsClass="form"
          componentClass="form"
          horizontal={false}
          inline={false}
        >
          <FormGroup
            bsClass="form-group"
          >
            <div
              className="textfield"
            >
              <FormControl
                bsClass="form-control"
                componentClass="input"
                onChange={[Function]}
                placeholder="Epost"
                value=""
              />
              <FormControlFeedback
                bsClass="form-control-feedback"
                bsRole="feedback"
              />
            </div>
          </FormGroup>
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="primary"
            disabled={false}
            onClick={[Function]}
          >
            Tilbakestill passord
          </Button>
        </Form>,
      ],
      "className": "container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Glemt passord",
        },
        "ref": null,
        "rendered": "Glemt passord",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Skriv inn eposten din og få tilsendt et nytt passord på mail.",
        },
        "ref": null,
        "rendered": "Skriv inn eposten din og få tilsendt et nytt passord på mail.",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "form",
          "children": Array [
            <FormGroup
              bsClass="form-group"
            >
              <div
                className="textfield"
              >
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  onChange={[Function]}
                  placeholder="Epost"
                  value=""
                />
                <FormControlFeedback
                  bsClass="form-control-feedback"
                  bsRole="feedback"
                />
              </div>
            </FormGroup>,
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsStyle="primary"
              disabled={false}
              onClick={[Function]}
            >
              Tilbakestill passord
            </Button>,
          ],
          "componentClass": "form",
          "horizontal": false,
          "inline": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "form-group",
              "children": <div
                className="textfield"
              >
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  onChange={[Function]}
                  placeholder="Epost"
                  value=""
                />
                <FormControlFeedback
                  bsClass="form-control-feedback"
                  bsRole="feedback"
                />
              </div>,
              "validationState": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <FormControl
                    bsClass="form-control"
                    componentClass="input"
                    onChange={[Function]}
                    placeholder="Epost"
                    value=""
                  />,
                  <FormControlFeedback
                    bsClass="form-control-feedback"
                    bsRole="feedback"
                  />,
                ],
                "className": "textfield",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "form-control",
                    "componentClass": "input",
                    "onChange": [Function],
                    "placeholder": "Epost",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "form-control-feedback",
                    "bsRole": "feedback",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "active": false,
              "block": false,
              "bsClass": "btn",
              "bsStyle": "primary",
              "children": "Tilbakestill passord",
              "disabled": false,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Tilbakestill passord",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2>
            Glemt passord
          </h2>,
          <p>
            Skriv inn eposten din og få tilsendt et nytt passord på mail.
          </p>,
          <Form
            bsClass="form"
            componentClass="form"
            horizontal={false}
            inline={false}
          >
            <FormGroup
              bsClass="form-group"
            >
              <div
                className="textfield"
              >
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  onChange={[Function]}
                  placeholder="Epost"
                  value=""
                />
                <FormControlFeedback
                  bsClass="form-control-feedback"
                  bsRole="feedback"
                />
              </div>
            </FormGroup>
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsStyle="primary"
              disabled={false}
              onClick={[Function]}
            >
              Tilbakestill passord
            </Button>
          </Form>,
        ],
        "className": "container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Glemt passord",
          },
          "ref": null,
          "rendered": "Glemt passord",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Skriv inn eposten din og få tilsendt et nytt passord på mail.",
          },
          "ref": null,
          "rendered": "Skriv inn eposten din og få tilsendt et nytt passord på mail.",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "form",
            "children": Array [
              <FormGroup
                bsClass="form-group"
              >
                <div
                  className="textfield"
                >
                  <FormControl
                    bsClass="form-control"
                    componentClass="input"
                    onChange={[Function]}
                    placeholder="Epost"
                    value=""
                  />
                  <FormControlFeedback
                    bsClass="form-control-feedback"
                    bsRole="feedback"
                  />
                </div>
              </FormGroup>,
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="primary"
                disabled={false}
                onClick={[Function]}
              >
                Tilbakestill passord
              </Button>,
            ],
            "componentClass": "form",
            "horizontal": false,
            "inline": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "form-group",
                "children": <div
                  className="textfield"
                >
                  <FormControl
                    bsClass="form-control"
                    componentClass="input"
                    onChange={[Function]}
                    placeholder="Epost"
                    value=""
                  />
                  <FormControlFeedback
                    bsClass="form-control-feedback"
                    bsRole="feedback"
                  />
                </div>,
                "validationState": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      onChange={[Function]}
                      placeholder="Epost"
                      value=""
                    />,
                    <FormControlFeedback
                      bsClass="form-control-feedback"
                      bsRole="feedback"
                    />,
                  ],
                  "className": "textfield",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "form-control",
                      "componentClass": "input",
                      "onChange": [Function],
                      "placeholder": "Epost",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "form-control-feedback",
                      "bsRole": "feedback",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "active": false,
                "block": false,
                "bsClass": "btn",
                "bsStyle": "primary",
                "children": "Tilbakestill passord",
                "disabled": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Tilbakestill passord",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
