// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test for AdminResetUserPassword view renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AdminResetUserPassword />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Grid
        bsClass="container"
        componentClass="div"
        fluid={false}
      >
        <Col
          bsClass="col"
          componentClass="div"
          lg={2}
          md={2}
          sm={2}
          xs={2}
        />
        <Col
          bsClass="col"
          componentClass="div"
          lg={8}
          md={8}
          sm={8}
          xs={8}
        >
          <h2>
            Tilbakestill en brukers passord
          </h2>
          <p>
            Brukeren vil få tilsendt et tilfeldig generert passord på mail
          </p>
          <Form
            bsClass="form"
            componentClass="form"
            horizontal={false}
            inline={false}
          >
            <FormGroup
              bsClass="form-group"
            >
              <div
                className="textfield"
              >
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  onChange={[Function]}
                  placeholder="Epost"
                  value=""
                />
                <FormControlFeedback
                  bsClass="form-control-feedback"
                  bsRole="feedback"
                />
              </div>
            </FormGroup>
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsStyle="primary"
              disabled={false}
              onClick={[Function]}
            >
              Tilbakestill passord
            </Button>
          </Form>
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          lg={2}
          md={2}
          sm={2}
          xs={2}
        />
      </Grid>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "bsClass": "container",
        "children": Array [
          <Col
            bsClass="col"
            componentClass="div"
            lg={2}
            md={2}
            sm={2}
            xs={2}
          />,
          <Col
            bsClass="col"
            componentClass="div"
            lg={8}
            md={8}
            sm={8}
            xs={8}
          >
            <h2>
              Tilbakestill en brukers passord
            </h2>
            <p>
              Brukeren vil få tilsendt et tilfeldig generert passord på mail
            </p>
            <Form
              bsClass="form"
              componentClass="form"
              horizontal={false}
              inline={false}
            >
              <FormGroup
                bsClass="form-group"
              >
                <div
                  className="textfield"
                >
                  <FormControl
                    bsClass="form-control"
                    componentClass="input"
                    onChange={[Function]}
                    placeholder="Epost"
                    value=""
                  />
                  <FormControlFeedback
                    bsClass="form-control-feedback"
                    bsRole="feedback"
                  />
                </div>
              </FormGroup>
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="primary"
                disabled={false}
                onClick={[Function]}
              >
                Tilbakestill passord
              </Button>
            </Form>
          </Col>,
          <Col
            bsClass="col"
            componentClass="div"
            lg={2}
            md={2}
            sm={2}
            xs={2}
          />,
        ],
        "componentClass": "div",
        "fluid": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "col",
            "componentClass": "div",
            "lg": 2,
            "md": 2,
            "sm": 2,
            "xs": 2,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "col",
            "children": Array [
              <h2>
                Tilbakestill en brukers passord
              </h2>,
              <p>
                Brukeren vil få tilsendt et tilfeldig generert passord på mail
              </p>,
              <Form
                bsClass="form"
                componentClass="form"
                horizontal={false}
                inline={false}
              >
                <FormGroup
                  bsClass="form-group"
                >
                  <div
                    className="textfield"
                  >
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      onChange={[Function]}
                      placeholder="Epost"
                      value=""
                    />
                    <FormControlFeedback
                      bsClass="form-control-feedback"
                      bsRole="feedback"
                    />
                  </div>
                </FormGroup>
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="primary"
                  disabled={false}
                  onClick={[Function]}
                >
                  Tilbakestill passord
                </Button>
              </Form>,
            ],
            "componentClass": "div",
            "lg": 8,
            "md": 8,
            "sm": 8,
            "xs": 8,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Tilbakestill en brukers passord",
              },
              "ref": null,
              "rendered": "Tilbakestill en brukers passord",
              "type": "h2",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Brukeren vil få tilsendt et tilfeldig generert passord på mail",
              },
              "ref": null,
              "rendered": "Brukeren vil få tilsendt et tilfeldig generert passord på mail",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "form",
                "children": Array [
                  <FormGroup
                    bsClass="form-group"
                  >
                    <div
                      className="textfield"
                    >
                      <FormControl
                        bsClass="form-control"
                        componentClass="input"
                        onChange={[Function]}
                        placeholder="Epost"
                        value=""
                      />
                      <FormControlFeedback
                        bsClass="form-control-feedback"
                        bsRole="feedback"
                      />
                    </div>
                  </FormGroup>,
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    disabled={false}
                    onClick={[Function]}
                  >
                    Tilbakestill passord
                  </Button>,
                ],
                "componentClass": "form",
                "horizontal": false,
                "inline": false,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "form-group",
                    "children": <div
                      className="textfield"
                    >
                      <FormControl
                        bsClass="form-control"
                        componentClass="input"
                        onChange={[Function]}
                        placeholder="Epost"
                        value=""
                      />
                      <FormControlFeedback
                        bsClass="form-control-feedback"
                        bsRole="feedback"
                      />
                    </div>,
                    "validationState": undefined,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <FormControl
                          bsClass="form-control"
                          componentClass="input"
                          onChange={[Function]}
                          placeholder="Epost"
                          value=""
                        />,
                        <FormControlFeedback
                          bsClass="form-control-feedback"
                          bsRole="feedback"
                        />,
                      ],
                      "className": "textfield",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "bsClass": "form-control",
                          "componentClass": "input",
                          "onChange": [Function],
                          "placeholder": "Epost",
                          "value": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "bsClass": "form-control-feedback",
                          "bsRole": "feedback",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": "div",
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "active": false,
                    "block": false,
                    "bsClass": "btn",
                    "bsStyle": "primary",
                    "children": "Tilbakestill passord",
                    "disabled": false,
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Tilbakestill passord",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "col",
            "componentClass": "div",
            "lg": 2,
            "md": 2,
            "sm": 2,
            "xs": 2,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Grid
          bsClass="container"
          componentClass="div"
          fluid={false}
        >
          <Col
            bsClass="col"
            componentClass="div"
            lg={2}
            md={2}
            sm={2}
            xs={2}
          />
          <Col
            bsClass="col"
            componentClass="div"
            lg={8}
            md={8}
            sm={8}
            xs={8}
          >
            <h2>
              Tilbakestill en brukers passord
            </h2>
            <p>
              Brukeren vil få tilsendt et tilfeldig generert passord på mail
            </p>
            <Form
              bsClass="form"
              componentClass="form"
              horizontal={false}
              inline={false}
            >
              <FormGroup
                bsClass="form-group"
              >
                <div
                  className="textfield"
                >
                  <FormControl
                    bsClass="form-control"
                    componentClass="input"
                    onChange={[Function]}
                    placeholder="Epost"
                    value=""
                  />
                  <FormControlFeedback
                    bsClass="form-control-feedback"
                    bsRole="feedback"
                  />
                </div>
              </FormGroup>
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="primary"
                disabled={false}
                onClick={[Function]}
              >
                Tilbakestill passord
              </Button>
            </Form>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            lg={2}
            md={2}
            sm={2}
            xs={2}
          />
        </Grid>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "container",
          "children": Array [
            <Col
              bsClass="col"
              componentClass="div"
              lg={2}
              md={2}
              sm={2}
              xs={2}
            />,
            <Col
              bsClass="col"
              componentClass="div"
              lg={8}
              md={8}
              sm={8}
              xs={8}
            >
              <h2>
                Tilbakestill en brukers passord
              </h2>
              <p>
                Brukeren vil få tilsendt et tilfeldig generert passord på mail
              </p>
              <Form
                bsClass="form"
                componentClass="form"
                horizontal={false}
                inline={false}
              >
                <FormGroup
                  bsClass="form-group"
                >
                  <div
                    className="textfield"
                  >
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      onChange={[Function]}
                      placeholder="Epost"
                      value=""
                    />
                    <FormControlFeedback
                      bsClass="form-control-feedback"
                      bsRole="feedback"
                    />
                  </div>
                </FormGroup>
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="primary"
                  disabled={false}
                  onClick={[Function]}
                >
                  Tilbakestill passord
                </Button>
              </Form>
            </Col>,
            <Col
              bsClass="col"
              componentClass="div"
              lg={2}
              md={2}
              sm={2}
              xs={2}
            />,
          ],
          "componentClass": "div",
          "fluid": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "col",
              "componentClass": "div",
              "lg": 2,
              "md": 2,
              "sm": 2,
              "xs": 2,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "col",
              "children": Array [
                <h2>
                  Tilbakestill en brukers passord
                </h2>,
                <p>
                  Brukeren vil få tilsendt et tilfeldig generert passord på mail
                </p>,
                <Form
                  bsClass="form"
                  componentClass="form"
                  horizontal={false}
                  inline={false}
                >
                  <FormGroup
                    bsClass="form-group"
                  >
                    <div
                      className="textfield"
                    >
                      <FormControl
                        bsClass="form-control"
                        componentClass="input"
                        onChange={[Function]}
                        placeholder="Epost"
                        value=""
                      />
                      <FormControlFeedback
                        bsClass="form-control-feedback"
                        bsRole="feedback"
                      />
                    </div>
                  </FormGroup>
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    disabled={false}
                    onClick={[Function]}
                  >
                    Tilbakestill passord
                  </Button>
                </Form>,
              ],
              "componentClass": "div",
              "lg": 8,
              "md": 8,
              "sm": 8,
              "xs": 8,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Tilbakestill en brukers passord",
                },
                "ref": null,
                "rendered": "Tilbakestill en brukers passord",
                "type": "h2",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Brukeren vil få tilsendt et tilfeldig generert passord på mail",
                },
                "ref": null,
                "rendered": "Brukeren vil få tilsendt et tilfeldig generert passord på mail",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "form",
                  "children": Array [
                    <FormGroup
                      bsClass="form-group"
                    >
                      <div
                        className="textfield"
                      >
                        <FormControl
                          bsClass="form-control"
                          componentClass="input"
                          onChange={[Function]}
                          placeholder="Epost"
                          value=""
                        />
                        <FormControlFeedback
                          bsClass="form-control-feedback"
                          bsRole="feedback"
                        />
                      </div>
                    </FormGroup>,
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="primary"
                      disabled={false}
                      onClick={[Function]}
                    >
                      Tilbakestill passord
                    </Button>,
                  ],
                  "componentClass": "form",
                  "horizontal": false,
                  "inline": false,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "form-group",
                      "children": <div
                        className="textfield"
                      >
                        <FormControl
                          bsClass="form-control"
                          componentClass="input"
                          onChange={[Function]}
                          placeholder="Epost"
                          value=""
                        />
                        <FormControlFeedback
                          bsClass="form-control-feedback"
                          bsRole="feedback"
                        />
                      </div>,
                      "validationState": undefined,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <FormControl
                            bsClass="form-control"
                            componentClass="input"
                            onChange={[Function]}
                            placeholder="Epost"
                            value=""
                          />,
                          <FormControlFeedback
                            bsClass="form-control-feedback"
                            bsRole="feedback"
                          />,
                        ],
                        "className": "textfield",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "bsClass": "form-control",
                            "componentClass": "input",
                            "onChange": [Function],
                            "placeholder": "Epost",
                            "value": "",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "bsClass": "form-control-feedback",
                            "bsRole": "feedback",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "active": false,
                      "block": false,
                      "bsClass": "btn",
                      "bsStyle": "primary",
                      "children": "Tilbakestill passord",
                      "disabled": false,
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": "Tilbakestill passord",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "col",
              "componentClass": "div",
              "lg": 2,
              "md": 2,
              "sm": 2,
              "xs": 2,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
