// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test for WizardFormFirstPage view renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WizardFormFirstPage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="formDiv"
        />,
        <Map
          center={
            Object {
              "lat": 65.107877,
              "lng": 12.074429,
            }
          }
          doubleClickZoom={true}
          length={12}
          onClick={[Function]}
          onLocationFound={[Function]}
          style={
            Object {
              "bottom": "0",
              "left": "0",
              "right": "0",
              "top": "0",
            }
          }
          zoom={5}
        >
          <ForwardRef(Leaflet(TileLayer))
            attribution="&copy <a href=\\"http://osm.org/copyright\\">OpenStreetMap</a> contributors"
            url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
          />
        </Map>,
        <div
          className="choice-map-container"
        >
          <div
            className="choice-map"
          >
            <input
              className="input-map"
              onChange={[Function]}
              placeholder="Adresse, by"
              value=""
            />
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsStyle="primary"
              disabled={false}
              onClick={[Function]}
            >
              Finn addresse
            </Button>
          </div>
          <div
            className="choice-map"
          >
            <form
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                }
              }
            >
              <ForwardRef
                component={[Function]}
                label="latitude"
                name="lat"
                type="hidden"
              />
              <ForwardRef
                component={[Function]}
                label="longitude"
                name="lng"
                type="hidden"
              />
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="primary"
                className="next + ' ' + submitButton"
                disabled={false}
                id="submitButton"
                type="submit"
              >
                Meld feil
              </Button>
            </form>
          </div>
        </div>,
      ],
      "style": Object {
        "height": "100%",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "formDiv",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "center": Object {
            "lat": 65.107877,
            "lng": 12.074429,
          },
          "children": Array [
            <ForwardRef(Leaflet(TileLayer))
              attribution="&copy <a href=\\"http://osm.org/copyright\\">OpenStreetMap</a> contributors"
              url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
            />,
            null,
          ],
          "doubleClickZoom": true,
          "length": 12,
          "onClick": [Function],
          "onLocationFound": [Function],
          "style": Object {
            "bottom": "0",
            "left": "0",
            "right": "0",
            "top": "0",
          },
          "zoom": 5,
        },
        "ref": Object {
          "current": null,
        },
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "attribution": "&copy <a href=\\"http://osm.org/copyright\\">OpenStreetMap</a> contributors",
              "url": "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
          null,
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="choice-map"
            >
              <input
                className="input-map"
                onChange={[Function]}
                placeholder="Adresse, by"
                value=""
              />
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="primary"
                disabled={false}
                onClick={[Function]}
              >
                Finn addresse
              </Button>
            </div>,
            <div
              className="choice-map"
            >
              <form
                style={
                  Object {
                    "alignItems": "center",
                    "justifyContent": "center",
                  }
                }
              >
                <ForwardRef
                  component={[Function]}
                  label="latitude"
                  name="lat"
                  type="hidden"
                />
                <ForwardRef
                  component={[Function]}
                  label="longitude"
                  name="lng"
                  type="hidden"
                />
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="primary"
                  className="next + ' ' + submitButton"
                  disabled={false}
                  id="submitButton"
                  type="submit"
                >
                  Meld feil
                </Button>
              </form>
            </div>,
          ],
          "className": "choice-map-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  className="input-map"
                  onChange={[Function]}
                  placeholder="Adresse, by"
                  value=""
                />,
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="primary"
                  disabled={false}
                  onClick={[Function]}
                >
                  Finn addresse
                </Button>,
              ],
              "className": "choice-map",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input-map",
                  "onChange": [Function],
                  "placeholder": "Adresse, by",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "active": false,
                  "block": false,
                  "bsClass": "btn",
                  "bsStyle": "primary",
                  "children": "Finn addresse",
                  "disabled": false,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Finn addresse",
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <form
                style={
                  Object {
                    "alignItems": "center",
                    "justifyContent": "center",
                  }
                }
              >
                <ForwardRef
                  component={[Function]}
                  label="latitude"
                  name="lat"
                  type="hidden"
                />
                <ForwardRef
                  component={[Function]}
                  label="longitude"
                  name="lng"
                  type="hidden"
                />
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="primary"
                  className="next + ' ' + submitButton"
                  disabled={false}
                  id="submitButton"
                  type="submit"
                >
                  Meld feil
                </Button>
              </form>,
              "className": "choice-map",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <ForwardRef
                    component={[Function]}
                    label="latitude"
                    name="lat"
                    type="hidden"
                  />,
                  <ForwardRef
                    component={[Function]}
                    label="longitude"
                    name="lng"
                    type="hidden"
                  />,
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    className="next + ' ' + submitButton"
                    disabled={false}
                    id="submitButton"
                    type="submit"
                  >
                    Meld feil
                  </Button>,
                ],
                "onSubmit": undefined,
                "style": Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "component": [Function],
                    "label": "latitude",
                    "name": "lat",
                    "type": "hidden",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "displayName": "Field",
                    "render": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "component": [Function],
                    "label": "longitude",
                    "name": "lng",
                    "type": "hidden",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "displayName": "Field",
                    "render": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "active": false,
                    "block": false,
                    "bsClass": "btn",
                    "bsStyle": "primary",
                    "children": "Meld feil",
                    "className": "next + ' ' + submitButton",
                    "disabled": false,
                    "id": "submitButton",
                    "onClick": undefined,
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": "Meld feil",
                  "type": [Function],
                },
              ],
              "type": "form",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="formDiv"
          />,
          <Map
            center={
              Object {
                "lat": 65.107877,
                "lng": 12.074429,
              }
            }
            doubleClickZoom={true}
            length={12}
            onClick={[Function]}
            onLocationFound={[Function]}
            style={
              Object {
                "bottom": "0",
                "left": "0",
                "right": "0",
                "top": "0",
              }
            }
            zoom={5}
          >
            <ForwardRef(Leaflet(TileLayer))
              attribution="&copy <a href=\\"http://osm.org/copyright\\">OpenStreetMap</a> contributors"
              url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
            />
          </Map>,
          <div
            className="choice-map-container"
          >
            <div
              className="choice-map"
            >
              <input
                className="input-map"
                onChange={[Function]}
                placeholder="Adresse, by"
                value=""
              />
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="primary"
                disabled={false}
                onClick={[Function]}
              >
                Finn addresse
              </Button>
            </div>
            <div
              className="choice-map"
            >
              <form
                style={
                  Object {
                    "alignItems": "center",
                    "justifyContent": "center",
                  }
                }
              >
                <ForwardRef
                  component={[Function]}
                  label="latitude"
                  name="lat"
                  type="hidden"
                />
                <ForwardRef
                  component={[Function]}
                  label="longitude"
                  name="lng"
                  type="hidden"
                />
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="primary"
                  className="next + ' ' + submitButton"
                  disabled={false}
                  id="submitButton"
                  type="submit"
                >
                  Meld feil
                </Button>
              </form>
            </div>
          </div>,
        ],
        "style": Object {
          "height": "100%",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "formDiv",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "center": Object {
              "lat": 65.107877,
              "lng": 12.074429,
            },
            "children": Array [
              <ForwardRef(Leaflet(TileLayer))
                attribution="&copy <a href=\\"http://osm.org/copyright\\">OpenStreetMap</a> contributors"
                url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
              />,
              null,
            ],
            "doubleClickZoom": true,
            "length": 12,
            "onClick": [Function],
            "onLocationFound": [Function],
            "style": Object {
              "bottom": "0",
              "left": "0",
              "right": "0",
              "top": "0",
            },
            "zoom": 5,
          },
          "ref": Object {
            "current": null,
          },
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "attribution": "&copy <a href=\\"http://osm.org/copyright\\">OpenStreetMap</a> contributors",
                "url": "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
            null,
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="choice-map"
              >
                <input
                  className="input-map"
                  onChange={[Function]}
                  placeholder="Adresse, by"
                  value=""
                />
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="primary"
                  disabled={false}
                  onClick={[Function]}
                >
                  Finn addresse
                </Button>
              </div>,
              <div
                className="choice-map"
              >
                <form
                  style={
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                    }
                  }
                >
                  <ForwardRef
                    component={[Function]}
                    label="latitude"
                    name="lat"
                    type="hidden"
                  />
                  <ForwardRef
                    component={[Function]}
                    label="longitude"
                    name="lng"
                    type="hidden"
                  />
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    className="next + ' ' + submitButton"
                    disabled={false}
                    id="submitButton"
                    type="submit"
                  >
                    Meld feil
                  </Button>
                </form>
              </div>,
            ],
            "className": "choice-map-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    className="input-map"
                    onChange={[Function]}
                    placeholder="Adresse, by"
                    value=""
                  />,
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    disabled={false}
                    onClick={[Function]}
                  >
                    Finn addresse
                  </Button>,
                ],
                "className": "choice-map",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "input-map",
                    "onChange": [Function],
                    "placeholder": "Adresse, by",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "active": false,
                    "block": false,
                    "bsClass": "btn",
                    "bsStyle": "primary",
                    "children": "Finn addresse",
                    "disabled": false,
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Finn addresse",
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <form
                  style={
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                    }
                  }
                >
                  <ForwardRef
                    component={[Function]}
                    label="latitude"
                    name="lat"
                    type="hidden"
                  />
                  <ForwardRef
                    component={[Function]}
                    label="longitude"
                    name="lng"
                    type="hidden"
                  />
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    className="next + ' ' + submitButton"
                    disabled={false}
                    id="submitButton"
                    type="submit"
                  >
                    Meld feil
                  </Button>
                </form>,
                "className": "choice-map",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <ForwardRef
                      component={[Function]}
                      label="latitude"
                      name="lat"
                      type="hidden"
                    />,
                    <ForwardRef
                      component={[Function]}
                      label="longitude"
                      name="lng"
                      type="hidden"
                    />,
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="primary"
                      className="next + ' ' + submitButton"
                      disabled={false}
                      id="submitButton"
                      type="submit"
                    >
                      Meld feil
                    </Button>,
                  ],
                  "onSubmit": undefined,
                  "style": Object {
                    "alignItems": "center",
                    "justifyContent": "center",
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "component": [Function],
                      "label": "latitude",
                      "name": "lat",
                      "type": "hidden",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "displayName": "Field",
                      "render": [Function],
                    },
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "component": [Function],
                      "label": "longitude",
                      "name": "lng",
                      "type": "hidden",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "displayName": "Field",
                      "render": [Function],
                    },
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "active": false,
                      "block": false,
                      "bsClass": "btn",
                      "bsStyle": "primary",
                      "children": "Meld feil",
                      "className": "next + ' ' + submitButton",
                      "disabled": false,
                      "id": "submitButton",
                      "onClick": undefined,
                      "type": "submit",
                    },
                    "ref": null,
                    "rendered": "Meld feil",
                    "type": [Function],
                  },
                ],
                "type": "form",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Test for WizardFormSecondPage view renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WizardFormSecondPage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "bsClass": "container",
      "children": <div
        className="container"
      >
        <div
          className="formDiv"
        >
          <div
            className="progressBar"
          >
            <ProgressBar
              active={false}
              bsClass="progress-bar"
              isChild={false}
              label="2/3"
              max={100}
              min={0}
              now={66}
              srOnly={false}
              striped={false}
            />
          </div>
          <h3>
            Velg passende kategori
          </h3>
          <ChooseCategory
            changeCategoryHeader={[Function]}
            registerCategory={false}
          />
          <form>
            <ForwardRef
              component={[Function]}
              label="categoryid"
              name="categoryId"
              type="hidden"
            />
            <ForwardRef
              component={[Function]}
              label="categorylevel"
              name="categoryLevel"
              type="hidden"
            />
            <div>
              <Col
                bsClass="col"
                componentClass="div"
                lg={6}
                md={6}
                sm={6}
                xs={6}
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="primary"
                  className="previous"
                  disabled={false}
                  type="button"
                >
                  Forrige
                </Button>
              </Col>
              <Col
                align="right"
                bsClass="col"
                componentClass="div"
                lg={6}
                md={6}
                sm={6}
                xs={6}
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="primary"
                  className="next"
                  disabled={false}
                  type="submit"
                >
                  Neste
                </Button>
              </Col>
            </div>
          </form>
        </div>
      </div>,
      "componentClass": "div",
      "fluid": false,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="formDiv"
        >
          <div
            className="progressBar"
          >
            <ProgressBar
              active={false}
              bsClass="progress-bar"
              isChild={false}
              label="2/3"
              max={100}
              min={0}
              now={66}
              srOnly={false}
              striped={false}
            />
          </div>
          <h3>
            Velg passende kategori
          </h3>
          <ChooseCategory
            changeCategoryHeader={[Function]}
            registerCategory={false}
          />
          <form>
            <ForwardRef
              component={[Function]}
              label="categoryid"
              name="categoryId"
              type="hidden"
            />
            <ForwardRef
              component={[Function]}
              label="categorylevel"
              name="categoryLevel"
              type="hidden"
            />
            <div>
              <Col
                bsClass="col"
                componentClass="div"
                lg={6}
                md={6}
                sm={6}
                xs={6}
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="primary"
                  className="previous"
                  disabled={false}
                  type="button"
                >
                  Forrige
                </Button>
              </Col>
              <Col
                align="right"
                bsClass="col"
                componentClass="div"
                lg={6}
                md={6}
                sm={6}
                xs={6}
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="primary"
                  className="next"
                  disabled={false}
                  type="submit"
                >
                  Neste
                </Button>
              </Col>
            </div>
          </form>
        </div>,
        "className": "container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="progressBar"
            >
              <ProgressBar
                active={false}
                bsClass="progress-bar"
                isChild={false}
                label="2/3"
                max={100}
                min={0}
                now={66}
                srOnly={false}
                striped={false}
              />
            </div>,
            <h3>
              Velg passende kategori
            </h3>,
            <ChooseCategory
              changeCategoryHeader={[Function]}
              registerCategory={false}
            />,
            <form>
              <ForwardRef
                component={[Function]}
                label="categoryid"
                name="categoryId"
                type="hidden"
              />
              <ForwardRef
                component={[Function]}
                label="categorylevel"
                name="categoryLevel"
                type="hidden"
              />
              <div>
                <Col
                  bsClass="col"
                  componentClass="div"
                  lg={6}
                  md={6}
                  sm={6}
                  xs={6}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    className="previous"
                    disabled={false}
                    type="button"
                  >
                    Forrige
                  </Button>
                </Col>
                <Col
                  align="right"
                  bsClass="col"
                  componentClass="div"
                  lg={6}
                  md={6}
                  sm={6}
                  xs={6}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    className="next"
                    disabled={false}
                    type="submit"
                  >
                    Neste
                  </Button>
                </Col>
              </div>
            </form>,
          ],
          "className": "formDiv",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <ProgressBar
                active={false}
                bsClass="progress-bar"
                isChild={false}
                label="2/3"
                max={100}
                min={0}
                now={66}
                srOnly={false}
                striped={false}
              />,
              "className": "progressBar",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "active": false,
                "bsClass": "progress-bar",
                "isChild": false,
                "label": "2/3",
                "max": 100,
                "min": 0,
                "now": 66,
                "srOnly": false,
                "striped": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Velg passende kategori",
            },
            "ref": null,
            "rendered": "Velg passende kategori",
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "changeCategoryHeader": [Function],
              "registerCategory": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <ForwardRef
                  component={[Function]}
                  label="categoryid"
                  name="categoryId"
                  type="hidden"
                />,
                <ForwardRef
                  component={[Function]}
                  label="categorylevel"
                  name="categoryLevel"
                  type="hidden"
                />,
                <div>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    lg={6}
                    md={6}
                    sm={6}
                    xs={6}
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="primary"
                      className="previous"
                      disabled={false}
                      type="button"
                    >
                      Forrige
                    </Button>
                  </Col>
                  <Col
                    align="right"
                    bsClass="col"
                    componentClass="div"
                    lg={6}
                    md={6}
                    sm={6}
                    xs={6}
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="primary"
                      className="next"
                      disabled={false}
                      type="submit"
                    >
                      Neste
                    </Button>
                  </Col>
                </div>,
              ],
              "onSubmit": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "component": [Function],
                  "defaultValue": undefined,
                  "label": "categoryid",
                  "name": "categoryId",
                  "type": "hidden",
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "displayName": "Field",
                  "render": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "component": [Function],
                  "label": "categorylevel",
                  "name": "categoryLevel",
                  "type": "hidden",
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "displayName": "Field",
                  "render": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Col
                      bsClass="col"
                      componentClass="div"
                      lg={6}
                      md={6}
                      sm={6}
                      xs={6}
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="primary"
                        className="previous"
                        disabled={false}
                        type="button"
                      >
                        Forrige
                      </Button>
                    </Col>,
                    <Col
                      align="right"
                      bsClass="col"
                      componentClass="div"
                      lg={6}
                      md={6}
                      sm={6}
                      xs={6}
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="primary"
                        className="next"
                        disabled={false}
                        type="submit"
                      >
                        Neste
                      </Button>
                    </Col>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="primary"
                        className="previous"
                        disabled={false}
                        type="button"
                      >
                        Forrige
                      </Button>,
                      "componentClass": "div",
                      "lg": 6,
                      "md": 6,
                      "sm": 6,
                      "xs": 6,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "active": false,
                        "block": false,
                        "bsClass": "btn",
                        "bsStyle": "primary",
                        "children": "Forrige",
                        "className": "previous",
                        "disabled": false,
                        "onClick": undefined,
                        "type": "button",
                      },
                      "ref": null,
                      "rendered": "Forrige",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "align": "right",
                      "bsClass": "col",
                      "children": <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="primary"
                        className="next"
                        disabled={false}
                        type="submit"
                      >
                        Neste
                      </Button>,
                      "componentClass": "div",
                      "lg": 6,
                      "md": 6,
                      "sm": 6,
                      "xs": 6,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "active": false,
                        "block": false,
                        "bsClass": "btn",
                        "bsStyle": "primary",
                        "children": "Neste",
                        "className": "next",
                        "disabled": false,
                        "type": "submit",
                      },
                      "ref": null,
                      "rendered": "Neste",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "form",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "bsClass": "container",
        "children": <div
          className="container"
        >
          <div
            className="formDiv"
          >
            <div
              className="progressBar"
            >
              <ProgressBar
                active={false}
                bsClass="progress-bar"
                isChild={false}
                label="2/3"
                max={100}
                min={0}
                now={66}
                srOnly={false}
                striped={false}
              />
            </div>
            <h3>
              Velg passende kategori
            </h3>
            <ChooseCategory
              changeCategoryHeader={[Function]}
              registerCategory={false}
            />
            <form>
              <ForwardRef
                component={[Function]}
                label="categoryid"
                name="categoryId"
                type="hidden"
              />
              <ForwardRef
                component={[Function]}
                label="categorylevel"
                name="categoryLevel"
                type="hidden"
              />
              <div>
                <Col
                  bsClass="col"
                  componentClass="div"
                  lg={6}
                  md={6}
                  sm={6}
                  xs={6}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    className="previous"
                    disabled={false}
                    type="button"
                  >
                    Forrige
                  </Button>
                </Col>
                <Col
                  align="right"
                  bsClass="col"
                  componentClass="div"
                  lg={6}
                  md={6}
                  sm={6}
                  xs={6}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    className="next"
                    disabled={false}
                    type="submit"
                  >
                    Neste
                  </Button>
                </Col>
              </div>
            </form>
          </div>
        </div>,
        "componentClass": "div",
        "fluid": false,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="formDiv"
          >
            <div
              className="progressBar"
            >
              <ProgressBar
                active={false}
                bsClass="progress-bar"
                isChild={false}
                label="2/3"
                max={100}
                min={0}
                now={66}
                srOnly={false}
                striped={false}
              />
            </div>
            <h3>
              Velg passende kategori
            </h3>
            <ChooseCategory
              changeCategoryHeader={[Function]}
              registerCategory={false}
            />
            <form>
              <ForwardRef
                component={[Function]}
                label="categoryid"
                name="categoryId"
                type="hidden"
              />
              <ForwardRef
                component={[Function]}
                label="categorylevel"
                name="categoryLevel"
                type="hidden"
              />
              <div>
                <Col
                  bsClass="col"
                  componentClass="div"
                  lg={6}
                  md={6}
                  sm={6}
                  xs={6}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    className="previous"
                    disabled={false}
                    type="button"
                  >
                    Forrige
                  </Button>
                </Col>
                <Col
                  align="right"
                  bsClass="col"
                  componentClass="div"
                  lg={6}
                  md={6}
                  sm={6}
                  xs={6}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    className="next"
                    disabled={false}
                    type="submit"
                  >
                    Neste
                  </Button>
                </Col>
              </div>
            </form>
          </div>,
          "className": "container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="progressBar"
              >
                <ProgressBar
                  active={false}
                  bsClass="progress-bar"
                  isChild={false}
                  label="2/3"
                  max={100}
                  min={0}
                  now={66}
                  srOnly={false}
                  striped={false}
                />
              </div>,
              <h3>
                Velg passende kategori
              </h3>,
              <ChooseCategory
                changeCategoryHeader={[Function]}
                registerCategory={false}
              />,
              <form>
                <ForwardRef
                  component={[Function]}
                  label="categoryid"
                  name="categoryId"
                  type="hidden"
                />
                <ForwardRef
                  component={[Function]}
                  label="categorylevel"
                  name="categoryLevel"
                  type="hidden"
                />
                <div>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    lg={6}
                    md={6}
                    sm={6}
                    xs={6}
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="primary"
                      className="previous"
                      disabled={false}
                      type="button"
                    >
                      Forrige
                    </Button>
                  </Col>
                  <Col
                    align="right"
                    bsClass="col"
                    componentClass="div"
                    lg={6}
                    md={6}
                    sm={6}
                    xs={6}
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="primary"
                      className="next"
                      disabled={false}
                      type="submit"
                    >
                      Neste
                    </Button>
                  </Col>
                </div>
              </form>,
            ],
            "className": "formDiv",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <ProgressBar
                  active={false}
                  bsClass="progress-bar"
                  isChild={false}
                  label="2/3"
                  max={100}
                  min={0}
                  now={66}
                  srOnly={false}
                  striped={false}
                />,
                "className": "progressBar",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "active": false,
                  "bsClass": "progress-bar",
                  "isChild": false,
                  "label": "2/3",
                  "max": 100,
                  "min": 0,
                  "now": 66,
                  "srOnly": false,
                  "striped": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Velg passende kategori",
              },
              "ref": null,
              "rendered": "Velg passende kategori",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "changeCategoryHeader": [Function],
                "registerCategory": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <ForwardRef
                    component={[Function]}
                    label="categoryid"
                    name="categoryId"
                    type="hidden"
                  />,
                  <ForwardRef
                    component={[Function]}
                    label="categorylevel"
                    name="categoryLevel"
                    type="hidden"
                  />,
                  <div>
                    <Col
                      bsClass="col"
                      componentClass="div"
                      lg={6}
                      md={6}
                      sm={6}
                      xs={6}
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="primary"
                        className="previous"
                        disabled={false}
                        type="button"
                      >
                        Forrige
                      </Button>
                    </Col>
                    <Col
                      align="right"
                      bsClass="col"
                      componentClass="div"
                      lg={6}
                      md={6}
                      sm={6}
                      xs={6}
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="primary"
                        className="next"
                        disabled={false}
                        type="submit"
                      >
                        Neste
                      </Button>
                    </Col>
                  </div>,
                ],
                "onSubmit": undefined,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "component": [Function],
                    "defaultValue": undefined,
                    "label": "categoryid",
                    "name": "categoryId",
                    "type": "hidden",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "displayName": "Field",
                    "render": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "component": [Function],
                    "label": "categorylevel",
                    "name": "categoryLevel",
                    "type": "hidden",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "displayName": "Field",
                    "render": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <Col
                        bsClass="col"
                        componentClass="div"
                        lg={6}
                        md={6}
                        sm={6}
                        xs={6}
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="primary"
                          className="previous"
                          disabled={false}
                          type="button"
                        >
                          Forrige
                        </Button>
                      </Col>,
                      <Col
                        align="right"
                        bsClass="col"
                        componentClass="div"
                        lg={6}
                        md={6}
                        sm={6}
                        xs={6}
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="primary"
                          className="next"
                          disabled={false}
                          type="submit"
                        >
                          Neste
                        </Button>
                      </Col>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "col",
                        "children": <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="primary"
                          className="previous"
                          disabled={false}
                          type="button"
                        >
                          Forrige
                        </Button>,
                        "componentClass": "div",
                        "lg": 6,
                        "md": 6,
                        "sm": 6,
                        "xs": 6,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "active": false,
                          "block": false,
                          "bsClass": "btn",
                          "bsStyle": "primary",
                          "children": "Forrige",
                          "className": "previous",
                          "disabled": false,
                          "onClick": undefined,
                          "type": "button",
                        },
                        "ref": null,
                        "rendered": "Forrige",
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "align": "right",
                        "bsClass": "col",
                        "children": <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="primary"
                          className="next"
                          disabled={false}
                          type="submit"
                        >
                          Neste
                        </Button>,
                        "componentClass": "div",
                        "lg": 6,
                        "md": 6,
                        "sm": 6,
                        "xs": 6,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "active": false,
                          "block": false,
                          "bsClass": "btn",
                          "bsStyle": "primary",
                          "children": "Neste",
                          "className": "next",
                          "disabled": false,
                          "type": "submit",
                        },
                        "ref": null,
                        "rendered": "Neste",
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "form",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Test for WizardFormThirdPage view renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WizardFormThirdPage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "bsClass": "container",
      "children": <form>
        <div
          className="container"
        >
          <div
            className="formDiv"
          >
            <div
              className="progressBar"
            >
              <ProgressBar
                active={false}
                bsClass="progress-bar"
                isChild={false}
                label="3/3"
                max={100}
                min={0}
                now={100}
                srOnly={false}
                striped={false}
              />
            </div>
            <h3>
              Vennligst spesifiser din feilmelding
            </h3>
            <div
              className="paddingBot"
            >
              <ForwardRef
                component={[Function]}
                label="countyId"
                name="countyId"
                type="hidden"
              />
              <ForwardRef
                component={[Function]}
                label="Epost"
                name="userMail"
                type="hidden"
              />
              <ForwardRef
                component={[Function]}
                label="Beskrivelse"
                name="text"
                type="text"
              />
              <ForwardRef
                component={[Function]}
                label="imagePath"
                name="imagePath"
                type="hidden"
              />
              <form
                encType="multipart/form-data"
              >
                <Col
                  align="center"
                  bsClass="col"
                  componentClass="div"
                  lg={12}
                  md={12}
                  sm={12}
                  xs={12}
                >
                  <input
                    className="inputfile"
                    id="file"
                    label="Beskrivelse"
                    name="avatar"
                    onChange={[Function]}
                    placeholder="Bilde"
                    type="file"
                  />
                </Col>
              </form>
            </div>
            <div>
              <Col
                bsClass="col"
                componentClass="div"
                lg={6}
                md={6}
                sm={6}
                xs={6}
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="primary"
                  className="previous"
                  disabled={false}
                  type="button"
                >
                  Forrige
                </Button>
              </Col>
              <Col
                align="right"
                bsClass="col"
                componentClass="div"
                lg={6}
                md={6}
                sm={6}
                xs={6}
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="primary"
                  disabled={false}
                  onClick={[Function]}
                  type="submit"
                >
                  Send
                </Button>
              </Col>
            </div>
          </div>
        </div>
      </form>,
      "componentClass": "div",
      "fluid": false,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="container"
        >
          <div
            className="formDiv"
          >
            <div
              className="progressBar"
            >
              <ProgressBar
                active={false}
                bsClass="progress-bar"
                isChild={false}
                label="3/3"
                max={100}
                min={0}
                now={100}
                srOnly={false}
                striped={false}
              />
            </div>
            <h3>
              Vennligst spesifiser din feilmelding
            </h3>
            <div
              className="paddingBot"
            >
              <ForwardRef
                component={[Function]}
                label="countyId"
                name="countyId"
                type="hidden"
              />
              <ForwardRef
                component={[Function]}
                label="Epost"
                name="userMail"
                type="hidden"
              />
              <ForwardRef
                component={[Function]}
                label="Beskrivelse"
                name="text"
                type="text"
              />
              <ForwardRef
                component={[Function]}
                label="imagePath"
                name="imagePath"
                type="hidden"
              />
              <form
                encType="multipart/form-data"
              >
                <Col
                  align="center"
                  bsClass="col"
                  componentClass="div"
                  lg={12}
                  md={12}
                  sm={12}
                  xs={12}
                >
                  <input
                    className="inputfile"
                    id="file"
                    label="Beskrivelse"
                    name="avatar"
                    onChange={[Function]}
                    placeholder="Bilde"
                    type="file"
                  />
                </Col>
              </form>
            </div>
            <div>
              <Col
                bsClass="col"
                componentClass="div"
                lg={6}
                md={6}
                sm={6}
                xs={6}
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="primary"
                  className="previous"
                  disabled={false}
                  type="button"
                >
                  Forrige
                </Button>
              </Col>
              <Col
                align="right"
                bsClass="col"
                componentClass="div"
                lg={6}
                md={6}
                sm={6}
                xs={6}
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="primary"
                  disabled={false}
                  onClick={[Function]}
                  type="submit"
                >
                  Send
                </Button>
              </Col>
            </div>
          </div>
        </div>,
        "onSubmit": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="formDiv"
          >
            <div
              className="progressBar"
            >
              <ProgressBar
                active={false}
                bsClass="progress-bar"
                isChild={false}
                label="3/3"
                max={100}
                min={0}
                now={100}
                srOnly={false}
                striped={false}
              />
            </div>
            <h3>
              Vennligst spesifiser din feilmelding
            </h3>
            <div
              className="paddingBot"
            >
              <ForwardRef
                component={[Function]}
                label="countyId"
                name="countyId"
                type="hidden"
              />
              <ForwardRef
                component={[Function]}
                label="Epost"
                name="userMail"
                type="hidden"
              />
              <ForwardRef
                component={[Function]}
                label="Beskrivelse"
                name="text"
                type="text"
              />
              <ForwardRef
                component={[Function]}
                label="imagePath"
                name="imagePath"
                type="hidden"
              />
              <form
                encType="multipart/form-data"
              >
                <Col
                  align="center"
                  bsClass="col"
                  componentClass="div"
                  lg={12}
                  md={12}
                  sm={12}
                  xs={12}
                >
                  <input
                    className="inputfile"
                    id="file"
                    label="Beskrivelse"
                    name="avatar"
                    onChange={[Function]}
                    placeholder="Bilde"
                    type="file"
                  />
                </Col>
              </form>
            </div>
            <div>
              <Col
                bsClass="col"
                componentClass="div"
                lg={6}
                md={6}
                sm={6}
                xs={6}
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="primary"
                  className="previous"
                  disabled={false}
                  type="button"
                >
                  Forrige
                </Button>
              </Col>
              <Col
                align="right"
                bsClass="col"
                componentClass="div"
                lg={6}
                md={6}
                sm={6}
                xs={6}
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="primary"
                  disabled={false}
                  onClick={[Function]}
                  type="submit"
                >
                  Send
                </Button>
              </Col>
            </div>
          </div>,
          "className": "container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="progressBar"
              >
                <ProgressBar
                  active={false}
                  bsClass="progress-bar"
                  isChild={false}
                  label="3/3"
                  max={100}
                  min={0}
                  now={100}
                  srOnly={false}
                  striped={false}
                />
              </div>,
              <h3>
                Vennligst spesifiser din feilmelding
              </h3>,
              <div
                className="paddingBot"
              >
                <ForwardRef
                  component={[Function]}
                  label="countyId"
                  name="countyId"
                  type="hidden"
                />
                <ForwardRef
                  component={[Function]}
                  label="Epost"
                  name="userMail"
                  type="hidden"
                />
                <ForwardRef
                  component={[Function]}
                  label="Beskrivelse"
                  name="text"
                  type="text"
                />
                <ForwardRef
                  component={[Function]}
                  label="imagePath"
                  name="imagePath"
                  type="hidden"
                />
                <form
                  encType="multipart/form-data"
                >
                  <Col
                    align="center"
                    bsClass="col"
                    componentClass="div"
                    lg={12}
                    md={12}
                    sm={12}
                    xs={12}
                  >
                    <input
                      className="inputfile"
                      id="file"
                      label="Beskrivelse"
                      name="avatar"
                      onChange={[Function]}
                      placeholder="Bilde"
                      type="file"
                    />
                  </Col>
                </form>
              </div>,
              <div>
                <Col
                  bsClass="col"
                  componentClass="div"
                  lg={6}
                  md={6}
                  sm={6}
                  xs={6}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    className="previous"
                    disabled={false}
                    type="button"
                  >
                    Forrige
                  </Button>
                </Col>
                <Col
                  align="right"
                  bsClass="col"
                  componentClass="div"
                  lg={6}
                  md={6}
                  sm={6}
                  xs={6}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    disabled={false}
                    onClick={[Function]}
                    type="submit"
                  >
                    Send
                  </Button>
                </Col>
              </div>,
            ],
            "className": "formDiv",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <ProgressBar
                  active={false}
                  bsClass="progress-bar"
                  isChild={false}
                  label="3/3"
                  max={100}
                  min={0}
                  now={100}
                  srOnly={false}
                  striped={false}
                />,
                "className": "progressBar",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "active": false,
                  "bsClass": "progress-bar",
                  "isChild": false,
                  "label": "3/3",
                  "max": 100,
                  "min": 0,
                  "now": 100,
                  "srOnly": false,
                  "striped": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Vennligst spesifiser din feilmelding",
              },
              "ref": null,
              "rendered": "Vennligst spesifiser din feilmelding",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <ForwardRef
                    component={[Function]}
                    label="countyId"
                    name="countyId"
                    type="hidden"
                  />,
                  <ForwardRef
                    component={[Function]}
                    label="Epost"
                    name="userMail"
                    type="hidden"
                  />,
                  <ForwardRef
                    component={[Function]}
                    label="Beskrivelse"
                    name="text"
                    type="text"
                  />,
                  <ForwardRef
                    component={[Function]}
                    label="imagePath"
                    name="imagePath"
                    type="hidden"
                  />,
                  <form
                    encType="multipart/form-data"
                  >
                    <Col
                      align="center"
                      bsClass="col"
                      componentClass="div"
                      lg={12}
                      md={12}
                      sm={12}
                      xs={12}
                    >
                      <input
                        className="inputfile"
                        id="file"
                        label="Beskrivelse"
                        name="avatar"
                        onChange={[Function]}
                        placeholder="Bilde"
                        type="file"
                      />
                    </Col>
                  </form>,
                ],
                "className": "paddingBot",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "component": [Function],
                    "label": "countyId",
                    "name": "countyId",
                    "type": "hidden",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "displayName": "Field",
                    "render": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "component": [Function],
                    "label": "Epost",
                    "name": "userMail",
                    "type": "hidden",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "displayName": "Field",
                    "render": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "component": [Function],
                    "label": "Beskrivelse",
                    "name": "text",
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "displayName": "Field",
                    "render": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "component": [Function],
                    "label": "imagePath",
                    "name": "imagePath",
                    "type": "hidden",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "displayName": "Field",
                    "render": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Col
                      align="center"
                      bsClass="col"
                      componentClass="div"
                      lg={12}
                      md={12}
                      sm={12}
                      xs={12}
                    >
                      <input
                        className="inputfile"
                        id="file"
                        label="Beskrivelse"
                        name="avatar"
                        onChange={[Function]}
                        placeholder="Bilde"
                        type="file"
                      />
                    </Col>,
                    "encType": "multipart/form-data",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "align": "center",
                      "bsClass": "col",
                      "children": <input
                        className="inputfile"
                        id="file"
                        label="Beskrivelse"
                        name="avatar"
                        onChange={[Function]}
                        placeholder="Bilde"
                        type="file"
                      />,
                      "componentClass": "div",
                      "lg": 12,
                      "md": 12,
                      "sm": 12,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "inputfile",
                        "id": "file",
                        "label": "Beskrivelse",
                        "name": "avatar",
                        "onChange": [Function],
                        "placeholder": "Bilde",
                        "type": "file",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    "type": [Function],
                  },
                  "type": "form",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Col
                    bsClass="col"
                    componentClass="div"
                    lg={6}
                    md={6}
                    sm={6}
                    xs={6}
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="primary"
                      className="previous"
                      disabled={false}
                      type="button"
                    >
                      Forrige
                    </Button>
                  </Col>,
                  <Col
                    align="right"
                    bsClass="col"
                    componentClass="div"
                    lg={6}
                    md={6}
                    sm={6}
                    xs={6}
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="primary"
                      disabled={false}
                      onClick={[Function]}
                      type="submit"
                    >
                      Send
                    </Button>
                  </Col>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "col",
                    "children": <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="primary"
                      className="previous"
                      disabled={false}
                      type="button"
                    >
                      Forrige
                    </Button>,
                    "componentClass": "div",
                    "lg": 6,
                    "md": 6,
                    "sm": 6,
                    "xs": 6,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "active": false,
                      "block": false,
                      "bsClass": "btn",
                      "bsStyle": "primary",
                      "children": "Forrige",
                      "className": "previous",
                      "disabled": false,
                      "onClick": undefined,
                      "type": "button",
                    },
                    "ref": null,
                    "rendered": "Forrige",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "align": "right",
                    "bsClass": "col",
                    "children": <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="primary"
                      disabled={false}
                      onClick={[Function]}
                      type="submit"
                    >
                      Send
                    </Button>,
                    "componentClass": "div",
                    "lg": 6,
                    "md": 6,
                    "sm": 6,
                    "xs": 6,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "active": false,
                      "block": false,
                      "bsClass": "btn",
                      "bsStyle": "primary",
                      "children": "Send",
                      "disabled": false,
                      "onClick": [Function],
                      "type": "submit",
                    },
                    "ref": null,
                    "rendered": "Send",
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "form",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "bsClass": "container",
        "children": <form>
          <div
            className="container"
          >
            <div
              className="formDiv"
            >
              <div
                className="progressBar"
              >
                <ProgressBar
                  active={false}
                  bsClass="progress-bar"
                  isChild={false}
                  label="3/3"
                  max={100}
                  min={0}
                  now={100}
                  srOnly={false}
                  striped={false}
                />
              </div>
              <h3>
                Vennligst spesifiser din feilmelding
              </h3>
              <div
                className="paddingBot"
              >
                <ForwardRef
                  component={[Function]}
                  label="countyId"
                  name="countyId"
                  type="hidden"
                />
                <ForwardRef
                  component={[Function]}
                  label="Epost"
                  name="userMail"
                  type="hidden"
                />
                <ForwardRef
                  component={[Function]}
                  label="Beskrivelse"
                  name="text"
                  type="text"
                />
                <ForwardRef
                  component={[Function]}
                  label="imagePath"
                  name="imagePath"
                  type="hidden"
                />
                <form
                  encType="multipart/form-data"
                >
                  <Col
                    align="center"
                    bsClass="col"
                    componentClass="div"
                    lg={12}
                    md={12}
                    sm={12}
                    xs={12}
                  >
                    <input
                      className="inputfile"
                      id="file"
                      label="Beskrivelse"
                      name="avatar"
                      onChange={[Function]}
                      placeholder="Bilde"
                      type="file"
                    />
                  </Col>
                </form>
              </div>
              <div>
                <Col
                  bsClass="col"
                  componentClass="div"
                  lg={6}
                  md={6}
                  sm={6}
                  xs={6}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    className="previous"
                    disabled={false}
                    type="button"
                  >
                    Forrige
                  </Button>
                </Col>
                <Col
                  align="right"
                  bsClass="col"
                  componentClass="div"
                  lg={6}
                  md={6}
                  sm={6}
                  xs={6}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    disabled={false}
                    onClick={[Function]}
                    type="submit"
                  >
                    Send
                  </Button>
                </Col>
              </div>
            </div>
          </div>
        </form>,
        "componentClass": "div",
        "fluid": false,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="container"
          >
            <div
              className="formDiv"
            >
              <div
                className="progressBar"
              >
                <ProgressBar
                  active={false}
                  bsClass="progress-bar"
                  isChild={false}
                  label="3/3"
                  max={100}
                  min={0}
                  now={100}
                  srOnly={false}
                  striped={false}
                />
              </div>
              <h3>
                Vennligst spesifiser din feilmelding
              </h3>
              <div
                className="paddingBot"
              >
                <ForwardRef
                  component={[Function]}
                  label="countyId"
                  name="countyId"
                  type="hidden"
                />
                <ForwardRef
                  component={[Function]}
                  label="Epost"
                  name="userMail"
                  type="hidden"
                />
                <ForwardRef
                  component={[Function]}
                  label="Beskrivelse"
                  name="text"
                  type="text"
                />
                <ForwardRef
                  component={[Function]}
                  label="imagePath"
                  name="imagePath"
                  type="hidden"
                />
                <form
                  encType="multipart/form-data"
                >
                  <Col
                    align="center"
                    bsClass="col"
                    componentClass="div"
                    lg={12}
                    md={12}
                    sm={12}
                    xs={12}
                  >
                    <input
                      className="inputfile"
                      id="file"
                      label="Beskrivelse"
                      name="avatar"
                      onChange={[Function]}
                      placeholder="Bilde"
                      type="file"
                    />
                  </Col>
                </form>
              </div>
              <div>
                <Col
                  bsClass="col"
                  componentClass="div"
                  lg={6}
                  md={6}
                  sm={6}
                  xs={6}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    className="previous"
                    disabled={false}
                    type="button"
                  >
                    Forrige
                  </Button>
                </Col>
                <Col
                  align="right"
                  bsClass="col"
                  componentClass="div"
                  lg={6}
                  md={6}
                  sm={6}
                  xs={6}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    disabled={false}
                    onClick={[Function]}
                    type="submit"
                  >
                    Send
                  </Button>
                </Col>
              </div>
            </div>
          </div>,
          "onSubmit": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="formDiv"
            >
              <div
                className="progressBar"
              >
                <ProgressBar
                  active={false}
                  bsClass="progress-bar"
                  isChild={false}
                  label="3/3"
                  max={100}
                  min={0}
                  now={100}
                  srOnly={false}
                  striped={false}
                />
              </div>
              <h3>
                Vennligst spesifiser din feilmelding
              </h3>
              <div
                className="paddingBot"
              >
                <ForwardRef
                  component={[Function]}
                  label="countyId"
                  name="countyId"
                  type="hidden"
                />
                <ForwardRef
                  component={[Function]}
                  label="Epost"
                  name="userMail"
                  type="hidden"
                />
                <ForwardRef
                  component={[Function]}
                  label="Beskrivelse"
                  name="text"
                  type="text"
                />
                <ForwardRef
                  component={[Function]}
                  label="imagePath"
                  name="imagePath"
                  type="hidden"
                />
                <form
                  encType="multipart/form-data"
                >
                  <Col
                    align="center"
                    bsClass="col"
                    componentClass="div"
                    lg={12}
                    md={12}
                    sm={12}
                    xs={12}
                  >
                    <input
                      className="inputfile"
                      id="file"
                      label="Beskrivelse"
                      name="avatar"
                      onChange={[Function]}
                      placeholder="Bilde"
                      type="file"
                    />
                  </Col>
                </form>
              </div>
              <div>
                <Col
                  bsClass="col"
                  componentClass="div"
                  lg={6}
                  md={6}
                  sm={6}
                  xs={6}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    className="previous"
                    disabled={false}
                    type="button"
                  >
                    Forrige
                  </Button>
                </Col>
                <Col
                  align="right"
                  bsClass="col"
                  componentClass="div"
                  lg={6}
                  md={6}
                  sm={6}
                  xs={6}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    disabled={false}
                    onClick={[Function]}
                    type="submit"
                  >
                    Send
                  </Button>
                </Col>
              </div>
            </div>,
            "className": "container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="progressBar"
                >
                  <ProgressBar
                    active={false}
                    bsClass="progress-bar"
                    isChild={false}
                    label="3/3"
                    max={100}
                    min={0}
                    now={100}
                    srOnly={false}
                    striped={false}
                  />
                </div>,
                <h3>
                  Vennligst spesifiser din feilmelding
                </h3>,
                <div
                  className="paddingBot"
                >
                  <ForwardRef
                    component={[Function]}
                    label="countyId"
                    name="countyId"
                    type="hidden"
                  />
                  <ForwardRef
                    component={[Function]}
                    label="Epost"
                    name="userMail"
                    type="hidden"
                  />
                  <ForwardRef
                    component={[Function]}
                    label="Beskrivelse"
                    name="text"
                    type="text"
                  />
                  <ForwardRef
                    component={[Function]}
                    label="imagePath"
                    name="imagePath"
                    type="hidden"
                  />
                  <form
                    encType="multipart/form-data"
                  >
                    <Col
                      align="center"
                      bsClass="col"
                      componentClass="div"
                      lg={12}
                      md={12}
                      sm={12}
                      xs={12}
                    >
                      <input
                        className="inputfile"
                        id="file"
                        label="Beskrivelse"
                        name="avatar"
                        onChange={[Function]}
                        placeholder="Bilde"
                        type="file"
                      />
                    </Col>
                  </form>
                </div>,
                <div>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    lg={6}
                    md={6}
                    sm={6}
                    xs={6}
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="primary"
                      className="previous"
                      disabled={false}
                      type="button"
                    >
                      Forrige
                    </Button>
                  </Col>
                  <Col
                    align="right"
                    bsClass="col"
                    componentClass="div"
                    lg={6}
                    md={6}
                    sm={6}
                    xs={6}
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="primary"
                      disabled={false}
                      onClick={[Function]}
                      type="submit"
                    >
                      Send
                    </Button>
                  </Col>
                </div>,
              ],
              "className": "formDiv",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <ProgressBar
                    active={false}
                    bsClass="progress-bar"
                    isChild={false}
                    label="3/3"
                    max={100}
                    min={0}
                    now={100}
                    srOnly={false}
                    striped={false}
                  />,
                  "className": "progressBar",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "active": false,
                    "bsClass": "progress-bar",
                    "isChild": false,
                    "label": "3/3",
                    "max": 100,
                    "min": 0,
                    "now": 100,
                    "srOnly": false,
                    "striped": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Vennligst spesifiser din feilmelding",
                },
                "ref": null,
                "rendered": "Vennligst spesifiser din feilmelding",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <ForwardRef
                      component={[Function]}
                      label="countyId"
                      name="countyId"
                      type="hidden"
                    />,
                    <ForwardRef
                      component={[Function]}
                      label="Epost"
                      name="userMail"
                      type="hidden"
                    />,
                    <ForwardRef
                      component={[Function]}
                      label="Beskrivelse"
                      name="text"
                      type="text"
                    />,
                    <ForwardRef
                      component={[Function]}
                      label="imagePath"
                      name="imagePath"
                      type="hidden"
                    />,
                    <form
                      encType="multipart/form-data"
                    >
                      <Col
                        align="center"
                        bsClass="col"
                        componentClass="div"
                        lg={12}
                        md={12}
                        sm={12}
                        xs={12}
                      >
                        <input
                          className="inputfile"
                          id="file"
                          label="Beskrivelse"
                          name="avatar"
                          onChange={[Function]}
                          placeholder="Bilde"
                          type="file"
                        />
                      </Col>
                    </form>,
                  ],
                  "className": "paddingBot",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "component": [Function],
                      "label": "countyId",
                      "name": "countyId",
                      "type": "hidden",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "displayName": "Field",
                      "render": [Function],
                    },
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "component": [Function],
                      "label": "Epost",
                      "name": "userMail",
                      "type": "hidden",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "displayName": "Field",
                      "render": [Function],
                    },
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "component": [Function],
                      "label": "Beskrivelse",
                      "name": "text",
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "displayName": "Field",
                      "render": [Function],
                    },
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "component": [Function],
                      "label": "imagePath",
                      "name": "imagePath",
                      "type": "hidden",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "displayName": "Field",
                      "render": [Function],
                    },
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Col
                        align="center"
                        bsClass="col"
                        componentClass="div"
                        lg={12}
                        md={12}
                        sm={12}
                        xs={12}
                      >
                        <input
                          className="inputfile"
                          id="file"
                          label="Beskrivelse"
                          name="avatar"
                          onChange={[Function]}
                          placeholder="Bilde"
                          type="file"
                        />
                      </Col>,
                      "encType": "multipart/form-data",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "align": "center",
                        "bsClass": "col",
                        "children": <input
                          className="inputfile"
                          id="file"
                          label="Beskrivelse"
                          name="avatar"
                          onChange={[Function]}
                          placeholder="Bilde"
                          type="file"
                        />,
                        "componentClass": "div",
                        "lg": 12,
                        "md": 12,
                        "sm": 12,
                        "xs": 12,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "className": "inputfile",
                          "id": "file",
                          "label": "Beskrivelse",
                          "name": "avatar",
                          "onChange": [Function],
                          "placeholder": "Bilde",
                          "type": "file",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "input",
                      },
                      "type": [Function],
                    },
                    "type": "form",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Col
                      bsClass="col"
                      componentClass="div"
                      lg={6}
                      md={6}
                      sm={6}
                      xs={6}
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="primary"
                        className="previous"
                        disabled={false}
                        type="button"
                      >
                        Forrige
                      </Button>
                    </Col>,
                    <Col
                      align="right"
                      bsClass="col"
                      componentClass="div"
                      lg={6}
                      md={6}
                      sm={6}
                      xs={6}
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="primary"
                        disabled={false}
                        onClick={[Function]}
                        type="submit"
                      >
                        Send
                      </Button>
                    </Col>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="primary"
                        className="previous"
                        disabled={false}
                        type="button"
                      >
                        Forrige
                      </Button>,
                      "componentClass": "div",
                      "lg": 6,
                      "md": 6,
                      "sm": 6,
                      "xs": 6,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "active": false,
                        "block": false,
                        "bsClass": "btn",
                        "bsStyle": "primary",
                        "children": "Forrige",
                        "className": "previous",
                        "disabled": false,
                        "onClick": undefined,
                        "type": "button",
                      },
                      "ref": null,
                      "rendered": "Forrige",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "align": "right",
                      "bsClass": "col",
                      "children": <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="primary"
                        disabled={false}
                        onClick={[Function]}
                        type="submit"
                      >
                        Send
                      </Button>,
                      "componentClass": "div",
                      "lg": 6,
                      "md": 6,
                      "sm": 6,
                      "xs": 6,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "active": false,
                        "block": false,
                        "bsClass": "btn",
                        "bsStyle": "primary",
                        "children": "Send",
                        "disabled": false,
                        "onClick": [Function],
                        "type": "submit",
                      },
                      "ref": null,
                      "rendered": "Send",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "form",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
